/*
 * Copyright (c) 2014 David Sowerby
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'project-report'

sourceCompatibility = '1.8'

group = "uk.q3c"
version = '0.8.20-SNAPSHOT'

project.ext.vaadinVersion = '7.7.3'
project.ext.guiceVersion = '4.1.0'
project.ext.shiroVersion = '1.3.0'

repositories {
    maven {
        url "file:///" + System.getProperty("user.home") + "/.m2/local"
    }
    
    jcenter()

    maven {
        url "http://maven.vaadin.com/vaadin-addons"
    }

    mavenCentral()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/" + System.getProperty("user.home") + "/.m2/local")
            pom {
                project {
                    inceptionYear '2014'
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }
        }
        mavenDeployer {
            repository(url: "http://192.168.0.5:8081/nexus/content/repositories/snapshots"){
                authentication(userName: "admin", password: "servsif")
            }
            pom {
                project {
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

javadoc {
    failOnError = false
}

dependencies {

    //Dependency Injection
    compile 'com.google.inject:guice:' + guiceVersion
    compile 'com.google.inject.extensions:guice-servlet:' + guiceVersion
    compile 'com.google.inject.extensions:guice-assistedinject:' + guiceVersion
    compile 'com.google.inject.extensions:guice-multibindings:' + guiceVersion

    //Date Time
    compile 'joda-time:joda-time:2.9.4'

    //Logging
    compile 'org.slf4j:slf4j-api:1.7.21'

    //servlet
    compileOnly "javax.servlet:javax.servlet-api:3.+"

    //testing
    testCompile 'com.mycila:mycila-guice:2.10.ga'
    testCompile 'com.mycila.testing.plugins:mycila-testing-guice:2.8'
    testCompile 'com.mycila.testing.plugins:mycila-testing-mockito:2.8'
    testCompile 'org.mockito:mockito-all:1.9.0'
    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:1.5.0'
    testCompile 'org.assertj:assertj-guava:1.0.0'

    //Utility
    //compile 'com.google.guava:guava:13.0.1'
    //the easiest way to all the Jung parts
    compile 'net.sf.jung:jung-samples:2.0.1'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-configuration:commons-configuration:1.10'
    compile 'org.reflections:reflections:0.9.10'

    //Validation
    compile 'org.apache.bval:bval-jsr303:0.5'
    compile 'org.apache.bval:bval-guice:0.5'
    compile 'javax.validation:validation-api:1.0.0.GA'

    //User access control
    compile 'org.apache.shiro:shiro-core:' + shiroVersion
    compile 'org.apache.shiro:shiro-web:' + shiroVersion
    compile 'org.apache.shiro:shiro-guice:' + shiroVersion

    //Vaadin
    compile 'com.vaadin:vaadin-server:' + vaadinVersion
    // needed for Vaadin javadoc only
    compile "javax.portlet:portlet-api:2.0"

}
